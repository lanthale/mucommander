<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.trolsoft</groupId>
    <artifactId>trolcommander</artifactId>
    <version>0.9.9</version>

    <!-- This description text is included in the Windows installer by default, see win-jpackage.txt -->
    <description>Two panel filemanager</description>
    
    <licenses>
        <license>
            <name>GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.en.html</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Oleg Trifonow</name>
            <organization>trolsoft</organization>
            <organizationUrl>http://trolsoft.ru/en</organizationUrl>
        </developer>
    </developers>

    <properties>        
        <main-class>com.mucommander.TrolCommander</main-class>        
        <app.name>trolCommander</app.name>        
        <maven.build.timestamp.format>yy.ww.WWkkmm</maven.build.timestamp.format>
        <app.version>${version}</app.version>        
        <jvm.modules>java.base,java.naming,java.sql,java.transaction.xa,java.xml,jdk.unsupported,java.management,java.datatransfer,java.desktop,java.security.jgss,java.xml.crypto,jdk.javadoc,javafx.media,javafx.controls,javafx.fxml,javafx.graphics,javafx.base,javafx.web,java.logging,jdk.charsets</jvm.modules>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>
        <javafx.version>18</javafx.version>
        <!-- UUID via https://www.uuidgenerator.net -->
        <windows.upgrade.uuid>08a1e379-38b9-4e40-a92c-e065191636ec</windows.upgrade.uuid>        
        <windows.vendor>trolsoft</windows.vendor>
    </properties>
    
    <repositories>
        <repository>
            <id>raisercostin-github</id>
            <url>https://raw.githubusercontent.com/raisercostin/maven-repo/master/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>brockmann-consult</id>
            <url>https://www.brockmann-consult.de/mvn/os/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>clojars</id>
            <url>https://clojars.org/repo/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>wso2</id>
            <url>https://dist.wso2.org/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>        
    </repositories>    

    <dependencies>
        <!-- This dependency is a normal Maven dependency, here mainly as an example. It brings in other transitive
        dependencies as well. You can remove it from your project (unless you happen to need to generate test data.  -->
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.1.1</version>                       
        </dependency>  
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-core</artifactId>
            <version>12.2.0</version>            
        </dependency>        
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>12.2.0</version>            
        </dependency>        
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-themify-pack</artifactId>
            <version>12.2.0</version>            
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome-pack</artifactId>
            <version>12.2.0</version>
        </dependency> 
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>23.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.0-alpha7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.0-alpha7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.jmdns</groupId>
            <artifactId>jmdns</artifactId>
            <version>3.4.1</version>
        </dependency>
        <dependency>
            <groupId>net.sf.sevenzipjbinding</groupId>
            <artifactId>sevenzipjbinding</artifactId>
            <version>16.02-2.01</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.21</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-hdfs</artifactId>
            <version>3.3.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>3.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>3.3.3</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>5.11.0</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>5.11.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun</groupId>
            <artifactId>yanfs</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>org.jets3t</groupId>
            <artifactId>jets3t</artifactId>
            <version>0.9.7</version>
        </dependency>
        <dependency>
            <groupId>com.sshtools</groupId>
            <artifactId>j2ssh-maverick</artifactId>
            <version>1.5.5</version>
        </dependency>
        <dependency>
            <groupId>sshtools</groupId>
            <artifactId>j2ssh-core</artifactId>
            <version>0.2.9</version>
        </dependency>
        <dependency>
            <groupId>sshtools</groupId>
            <artifactId>j2ssh-common</artifactId>
            <version>0.2.9</version>
        </dependency>
        <dependency>
            <groupId>org.samba.jcifs</groupId>
            <artifactId>jcifs</artifactId>
            <version>1.3.14-kohsuke-1</version>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>vijava</artifactId>
            <version>5.1</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.photon.controller</groupId>
            <artifactId>photon-vsphere-adapter-sdk</artifactId>
            <version>0.6.60</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.ws</groupId>
            <artifactId>jaxws-api</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>transport</artifactId>
            <version>1.0.0-RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.github.lookfirst</groupId>
            <artifactId>sardine</artifactId>
            <version>5.10</version>
        </dependency>
        <dependency>
            <groupId>com.apple</groupId>
            <artifactId>AppleJavaExtensions</artifactId>
            <version>1.4</version>
        </dependency>        
        <dependency>
            <groupId>com.yuvimasory</groupId>
            <artifactId>orange-extensions</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.massisframework</groupId>
            <artifactId>orange-extensions</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.plist</groupId>
            <artifactId>dd-plist</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>com.jidesoft</groupId>
            <artifactId>jide-common</artifactId>
            <version>3.6.1</version>
        </dependency>
        <dependency>
            <groupId>com.jidesoft</groupId>
            <artifactId>jide-oss</artifactId>
            <version>3.6.18</version>
        </dependency>
        <dependency>
            <groupId>org.fife.ui</groupId>
            <artifactId>rsyntaxtextarea</artifactId>
            <version>2.0.4.1</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20220320</version>
        </dependency>
        <dependency>
            <groupId>com.jidesoft</groupId>
            <artifactId>jide-components</artifactId>
            <version>3.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.jediterm</groupId>
            <artifactId>jediterm-pty</artifactId>
            <version>2.42</version>
            <scope>runtime</scope>
        </dependency>        
        <dependency>
            <groupId>com.google.common</groupId>
            <artifactId>google-collect</artifactId>
            <version>1.0-rc1</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.pty4j</groupId>
            <artifactId>pty4j</artifactId>
            <version>0.12.7</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.objectweb.joram</groupId>
            <artifactId>jftp</artifactId>
            <version>1.52</version>            
        </dependency>
        <dependency>
            <groupId>com.github.stephenc.java-iso-tools</groupId>
            <artifactId>sabre</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.stephenc.java-iso-tools</groupId>
            <artifactId>iso9660-writer</artifactId>
            <version>2.1.0</version>
        </dependency>        









        <!-- This downloads the platform specific JavaFX libraries used by the project. -->
        <!-- For the final installable, the JavaFX dependencies are provided via modules, but by including these here
        they work nicely with with IDEs and other Maven plugins (e.g. the javafx:run). -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>        
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency> 
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>        
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>                                
    </dependencies>

    <build>
        <resources>
            <resource>                
                <directory>${project.basedir}/src/main/resources/pkg-config</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/pkg-config</targetPath>
            </resource>            
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>                    
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>                        
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>                            
                            <excludeGroupIds>org.openjfx</excludeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>                
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                </configuration>
            </plugin>
            <plugin>                
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>                            
                        <!-- Usage: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>${main-class}</mainClass> 
                            <options>                                     
                                <option>-XX:+UseZGC</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option> 
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                                 
                            </options>
                        </configuration>                           
                    </execution>
                    <execution>                            
                        <id>debug</id>
                        <configuration>
                            <mainClass>${main-class}</mainClass> 
                            <options>                                     
                                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=localhost:8000</option>  
                                <option>-XX:+UseZGC</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>      
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                            
                            </options>
                        </configuration>
                    </execution>
                    <execution>                            
                        <id>ide-debug</id>
                        <configuration>
                            <mainClass>${main-class}</mainClass> 
                            <options>                                     
                                <option>-agentlib:jdwp=transport=dt_socket,server=n,address=${jpda.address}</option>
                                <option>-XX:+UseZGC</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option> 
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                                   
                            </options>
                        </configuration>
                    </execution>
                    <execution>                            
                        <id>ide-profile</id>
                        <configuration>
                            <mainClass>${main-class}</mainClass> 
                            <options>
                                <option>${profiler.jvmargs.arg1}</option>
                                <option>${profiler.jvmargs.arg2}</option>
                                <option>${profiler.jvmargs.arg3}</option>
                                <option>${profiler.jvmargs.arg4}</option>
                                <option>${profiler.jvmargs.arg5}</option>   
                                <option>-XX:+UseZGC</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>  
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                               
                            </options>
                        </configuration>
                    </execution>
                </executions> 
            </plugin>
            
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <reporting>
        <plugins>
            <!-- http://mojo.codehaus.org/versions-maven-plugin/version-rules.html -->
            <!-- This plugin is a utility to find outdated dependencies in your project. Just run mvn site and
           the resulting HTML reports in target/site will let you know what plugins and dependencies are out of date.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.8.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <processDependencyManagementTransitive>false</processDependencyManagementTransitive>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <profiles>        
        <profile>
            <id>unix-active</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
            </properties>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>win</platform>
            </properties>            
        </profile>
        <profile>
            <id>mac-active</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <platform>mac</platform>
            </properties>
        </profile>
        <profile>
            <id>package</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- https://github.com/wiverson/jtoolprovider-plugin -->
                        <groupId>io.github.wiverson</groupId>
                        <artifactId>jtoolprovider-plugin</artifactId>
                        <version>1.0.34</version>                
                        <executions>                    
                            <execution>
                                <id>jlink</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jlink</toolName>
                                    <removeDirectories>${project.build.directory}/jvm-image/</removeDirectories>
                                    <modulePath>${project.basedir}/jmods/${platform}-javafx/javafx-jmods-${javafx.version}/
                                    </modulePath>
                                    <addModules>${jvm.modules}</addModules>
                                    <output>${project.build.directory}/jvm-image</output>
                                    <args>
                                        <arg>--strip-native-commands</arg>
                                        <arg>--no-header-files</arg>
                                        <arg>--strip-debug</arg>
                                        <arg>--no-man-pages</arg>
                                        <arg>--compress=2</arg>
                                    </args>
                                </configuration>
                            </execution>                    
                            <execution>
                                <id>jpackage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jpackage</toolName>
                                    <removeDirectories>${project.build.directory}/installer-work</removeDirectories>
                                    <args>@${project.build.directory}/pkg-config/${platform}-jpackage.txt</args>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
